
//ASK HOW TO KEEP THE COLOR 
import java.awt.AlphaComposite;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.TexturePaint;
import java.awt.image.BufferedImage;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.io.Serializable;
import java.net.URL;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import java.awt.Rectangle;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author macuser
 */
public class Drawing extends javax.swing.JFrame implements Serializable {

    /**
     * Creates new form Drawing
     */
    public Drawing() {
        initComponents();
        

        openButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        ovalButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        lineButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        rectButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        roundRectButton2.setCursor(new Cursor(Cursor.HAND_CURSOR));
        saveButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        newFileButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        printButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        textButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        freehandButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));
        eraserButton1.setCursor(new Cursor(Cursor.HAND_CURSOR));    
    }
       
    StoreToFile stf = new StoreToFile();
    DrawShape ds;      //create object for drawshape abstract class  
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        newFileButton1 = new NewFileButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        openButton1 = new OpenButton();
        jSeparator9 = new javax.swing.JToolBar.Separator();
        saveButton1 = new SaveButton();
        jSeparator11 = new javax.swing.JToolBar.Separator();
        printButton1 = new PrintButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        freehandButton1 = new FreehandButton();
        textButton1 = new TextButton();
        jSeparator14 = new javax.swing.JToolBar.Separator();
        ovalButton1 = new OvalButton();
        rectButton1 = new RectButton();
        roundRectButton2 = new RoundRectButton();
        lineButton1 = new LineButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jCheckBox2 = new javax.swing.JCheckBox();
        jSeparator12 = new javax.swing.JToolBar.Separator();
        jCheckBox1 = new javax.swing.JCheckBox();
        jSeparator13 = new javax.swing.JToolBar.Separator();
        jLabel1 = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        eraserButton1 = new EraserButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jPanel4 = new javax.swing.JPanel();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jSeparator8 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                frameResized(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(0, 5));

        jToolBar1.setBackground(new java.awt.Color(255, 204, 255));
        jToolBar1.setForeground(new java.awt.Color(0, 255, 255));
        jToolBar1.setRollover(true);

        newFileButton1.setFocusable(false);
        newFileButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newFileButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        newFileButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        newFileButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        newFileButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newFileButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(newFileButton1);
        jToolBar1.add(jSeparator10);

        openButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        openButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        openButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        openButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(openButton1);
        jToolBar1.add(jSeparator9);

        saveButton1.setFocusable(false);
        saveButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        saveButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        saveButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(saveButton1);
        jToolBar1.add(jSeparator11);

        printButton1.setFocusable(false);
        printButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        printButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        printButton1.setMinimumSize(new java.awt.Dimension(0, 0));
        printButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        printButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        printButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(printButton1);

        jSeparator3.setMaximumSize(new java.awt.Dimension(50, 6));
        jToolBar1.add(jSeparator3);

        freehandButton1.setFocusable(false);
        freehandButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        freehandButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        freehandButton1.setMinimumSize(new java.awt.Dimension(30, 30));
        freehandButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        freehandButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        freehandButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freehandButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(freehandButton1);

        textButton1.setFocusable(false);
        textButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        textButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        textButton1.setMinimumSize(new java.awt.Dimension(30, 30));
        textButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        textButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        textButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(textButton1);
        jToolBar1.add(jSeparator14);

        ovalButton1.setFocusable(false);
        ovalButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ovalButton1.setMaximumSize(new java.awt.Dimension(25, 30));
        ovalButton1.setMinimumSize(new java.awt.Dimension(50, 50));
        ovalButton1.setPreferredSize(new java.awt.Dimension(25, 30));
        ovalButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ovalButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ovalButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(ovalButton1);

        rectButton1.setFocusable(false);
        rectButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        rectButton1.setMaximumSize(new java.awt.Dimension(50, 50));
        rectButton1.setMinimumSize(new java.awt.Dimension(20, 25));
        rectButton1.setPreferredSize(new java.awt.Dimension(20, 25));
        rectButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        rectButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rectButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(rectButton1);

        roundRectButton2.setFocusable(false);
        roundRectButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        roundRectButton2.setMaximumSize(new java.awt.Dimension(50, 50));
        roundRectButton2.setMinimumSize(new java.awt.Dimension(20, 20));
        roundRectButton2.setPreferredSize(new java.awt.Dimension(25, 20));
        roundRectButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        roundRectButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundRectButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(roundRectButton2);

        lineButton1.setFocusable(false);
        lineButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lineButton1.setMaximumSize(new java.awt.Dimension(50, 50));
        lineButton1.setPreferredSize(new java.awt.Dimension(20, 30));
        lineButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        lineButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(lineButton1);

        jSeparator1.setMaximumSize(new java.awt.Dimension(50, 6));
        jToolBar1.add(jSeparator1);

        jCheckBox2.setText("Filled");
        jCheckBox2.setFocusable(false);
        jCheckBox2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jCheckBox2);
        jToolBar1.add(jSeparator12);

        jCheckBox1.setText("Dashed");
        jCheckBox1.setFocusable(false);
        jCheckBox1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jCheckBox1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jCheckBox1);
        jToolBar1.add(jSeparator13);

        jLabel1.setText("Thickness");
        jToolBar1.add(jLabel1);

        jSlider1.setMaximum(50);
        jSlider1.setValue(10);
        jSlider1.setBorder(new javax.swing.border.MatteBorder(null));
        jSlider1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider1.setMaximumSize(new java.awt.Dimension(100, 35));
        jSlider1.setPreferredSize(new java.awt.Dimension(70, 26));
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                adjustThickness(evt);
            }
        });
        jToolBar1.add(jSlider1);

        jSeparator2.setMaximumSize(new java.awt.Dimension(50, 6));
        jToolBar1.add(jSeparator2);

        eraserButton1.setFocusable(false);
        eraserButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eraserButton1.setMaximumSize(new java.awt.Dimension(30, 30));
        eraserButton1.setMinimumSize(new java.awt.Dimension(30, 30));
        eraserButton1.setPreferredSize(new java.awt.Dimension(30, 30));
        eraserButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eraserButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eraserButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(eraserButton1);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jLabel2.setForeground(new java.awt.Color(245, 42, 22));
        jLabel2.setText("Colors");
        jPanel5.add(jLabel2);

        jSeparator7.setMaximumSize(new java.awt.Dimension(150, 32767));
        jPanel5.add(jSeparator7);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel3.setMaximumSize(new java.awt.Dimension(22, 22));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                color1Change(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel3);

        jSeparator6.setMaximumSize(new java.awt.Dimension(150, 6));
        jPanel5.add(jSeparator6);
        jPanel5.add(jSeparator4);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel4.setMaximumSize(new java.awt.Dimension(22, 22));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                color2Change(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel4);

        jSeparator5.setMaximumSize(new java.awt.Dimension(150, 6));
        jPanel5.add(jSeparator5);

        jRadioButton1.setText("Gradient");
        jRadioButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        jPanel5.add(jRadioButton1);

        jRadioButton2.setText("Texture");
        jRadioButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton2.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel5.add(jRadioButton2);
        jPanel5.add(jSeparator8);

        jLabel3.setForeground(new java.awt.Color(8, 79, 241));
        jLabel3.setText("Transparency");
        jPanel5.add(jLabel3);

        jSlider2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jSlider2.setMaximumSize(new java.awt.Dimension(100, 26));
        jSlider2.setPreferredSize(new java.awt.Dimension(100, 26));
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeTransparency(evt);
            }
        });
        jPanel5.add(jSlider2);

        getContentPane().add(jPanel5, java.awt.BorderLayout.PAGE_END);

        jPanel1.setOpaque(false);
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });
        jPanel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jPanel1ComponentResized(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 961, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("New");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFile(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setText("Open");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFile(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem5.setText("Save");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFile(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Print");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printImage(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    public void paint(Graphics g) {
    super.paintComponents(g);


    }
    private void ovalButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ovalButton1ActionPerformed
        ds = new Oval(); // if oval selected set ds equal to oval object
        ovalButton1.setEnabled(false);   //deactivate button after clicked
        rectButton1.setEnabled(true);
        lineButton1.setEnabled(true);
        roundRectButton2.setEnabled(true);
        freehandButton1.setEnabled(true);
        eraserButton1.setEnabled(true);
        freehand = false;
        eraser = false;
    }//GEN-LAST:event_ovalButton1ActionPerformed
    
    private void rectButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rectButton1ActionPerformed
        ds = new Rectangles(); // if rectangle selected set ds equal to rectangle object
        ovalButton1.setEnabled(true);
        rectButton1.setEnabled(false);   //deactivate button after clicked
        lineButton1.setEnabled(true);
        roundRectButton2.setEnabled(true);
        freehandButton1.setEnabled(true);
        eraserButton1.setEnabled(true);
        freehand = false;
        eraser = false;
    }//GEN-LAST:event_rectButton1ActionPerformed

    private void lineButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineButton1ActionPerformed
        ds = new Line(); // if line selected set ds equal to line object
        ovalButton1.setEnabled(true);
        rectButton1.setEnabled(true);
        lineButton1.setEnabled(false);   //deactivate button after clicked
        roundRectButton2.setEnabled(true);
        freehandButton1.setEnabled(true);
        eraserButton1.setEnabled(true);
        freehand = false;
        eraser = false;
    }//GEN-LAST:event_lineButton1ActionPerformed

    private void roundRectButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundRectButton2ActionPerformed
        ds = new RoundRect();  // if RoundRect selected set ds equal to RoundRect object
        ovalButton1.setEnabled(true);
        rectButton1.setEnabled(true);   
        freehandButton1.setEnabled(true);
        lineButton1.setEnabled(true);
        roundRectButton2.setEnabled(false);  //deactivate button after clicked
        eraserButton1.setEnabled(true);
        freehand = false;
        eraser = false;    
    }//GEN-LAST:event_roundRectButton2ActionPerformed
        int endx, endy;
    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        Graphics bgg = bg.getGraphics();
        bgg.drawImage(fg, 0 , 0, null);         // draw foreground to background
        endx = evt.getX();                      
        endy = evt.getY();            

    }//GEN-LAST:event_jPanel1MouseReleased
    Image bg, fg, saved;
         
    int startx, starty;
    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
       
        if (bg == null)
        {
            
            bg = jPanel1.createImage(jPanel1.getWidth(), jPanel1.getHeight());
            fg = jPanel1.createImage(jPanel1.getWidth(), jPanel1.getHeight());

        }
        if (bg != null && fg == null)   // when the panel size changed, create new images the size of new panel
        {
            fg = jPanel1.createImage(jPanel1.getWidth(), jPanel1.getHeight());  
            Graphics fgg = fg.getGraphics();
            fgg.drawImage(bg, 0, 0, null);       // draw old background to foreground
            bg = jPanel1.createImage(jPanel1.getWidth(), jPanel1.getHeight());
            Graphics bgg = bg.getGraphics();
            bgg.drawImage(fg, 0, 0, null);      // draw old background image to new background
            
            

                    
        }
        startx = evt.getX();
        starty = evt.getY(); // record where mouse was clicked
        drag2x = evt.getX();
        drag2y = evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed
    int dragx, dragy;
    int drag2x, drag2y;
    float[] fa = {10, 10, 10};
    float[] da;
    int thick = 5;            // thick is to edit thickness of line
    float val = 1f;       // set default transparency value 
    Color c1 = Color.BLACK;
    Color c2 = Color.BLACK;   //DEFAULT COLORS
    Color c3 = Color.WHITE;
    static boolean filled;       // determine wheter or not to fill shape
    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        
        Graphics fgg = fg.getGraphics();
        Graphics2D g2d = (Graphics2D) fgg;
        dragx = evt.getX();
        dragy = evt.getY();
        GradientPaint gp = new GradientPaint(startx, starty, c2, dragx, dragy, c3);   // set Gradient Paint based on user colors   
        BasicStroke bs;
        AlphaComposite ac = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, val);       

        fgg.drawImage(bg, 0, 0, null); // draw the background to the foreground
        //-----------------------------------------------------------------------------------------
        filled = jCheckBox2.isSelected(); // if user wants shape to be filled
      //-----------------------------------------------------------------------------------------      
         if(jCheckBox1.isSelected())     // if user wants dashed
             da = fa;
         else
             da = null;
      //-----------------------------------------------------------------------------------------   
        bs = new BasicStroke(thick, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 10, da, 10);  
        g2d.setStroke(bs);           // Dashed, Thickness
      //-----------------------------------------------------------------------------------------
        if (jRadioButton1.isSelected())  // If user wants Gradient Paint
        {              
            g2d.setPaint(gp);            // Gradient
        } 
        else if (jRadioButton2.isSelected())
        {
            try {
         Rectangle r = new Rectangle(dragx, dragy);   
         TexturePaint tp = new TexturePaint(bi, r);     
         g2d.setPaint(tp);
          }
            catch (Exception e){}
        }
        else
        {
            g2d.setPaint(null);
            g2d.setColor(c2);
        }
      //-----------------------------------------------------------------------------------------
      //----------------------------------------------------------------------------------------- 
       if(eraser){               // Eraser     
            bs = new BasicStroke(thick, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 10, null, 10);  
            g2d.setStroke(bs);   
            g2d.setColor(this.getBackground());     // set color to the color of the background
            Graphics g = jPanel1.getGraphics();
            g2d.drawLine(drag2x, drag2y, dragx  ,dragy);    // connect each oval drawn below
            ds.drawShape(dragx - (thick / 2) , dragy - (thick / 2) , thick , thick, g2d);  // make sure shape is drawn at center of mouse click
            g.drawImage(fg, 0 , 0, null);              
            Graphics bgg = bg.getGraphics();         // allow to double buffer while dragging
            bgg.drawImage(fg, 0 , 0, null);
        }
      //-----------------------------------------------------------------------------------------
      //-----------------------------------------------------------------------------------------  
       else if(freehand){                                           // Free Hand Drawing
            bs = new BasicStroke(thick, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 10, null, 10);  
            g2d.setStroke(bs);           // Dashed, Thickness
            Graphics g = jPanel1.getGraphics();
            g2d.drawLine(drag2x, drag2y, dragx  ,dragy);    // connect each oval drawn below
            ds.drawShape(dragx - (thick / 2) , dragy - (thick / 2) , thick , thick, g2d);  // make sure shape is drawn at center of mouse click
            g.drawImage(fg, 0 , 0, null);              
            Graphics bgg = bg.getGraphics();         // allow to double buffer while dragging
            bgg.drawImage(fg, 0 , 0, null);
        }
      
      //-----------------------------------------------------------------------------------------
      //-----------------------------------------------------------------------------------------
        else{
           g2d.setComposite(ac);       // Transparency
       try{
        ds.drawShape(startx, starty, dragx, dragy, g2d);
       }
       catch(NullPointerException npe){
           ds = new Line(); // DEFAULT OBJECT DRAWN IS LINE
       }
       
        Graphics g = jPanel1.getGraphics();
        g.drawImage(fg, 0 , 0, null);  
        }
       drag2x = dragx;    // store old move event
       drag2y = dragy;
        
    }//GEN-LAST:event_jPanel1MouseDragged
 
    private void newFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFile
         bg = null;  //set background to null
        repaint();        
    }//GEN-LAST:event_newFile

    private void openFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFile

           bg = stf.openFile();   // set Foreground equal to image in file
           Graphics g = jPanel1.getGraphics();
           g.drawImage(bg, 0 , 0, null);     //redraw last image
           fg = null;
           
    }//GEN-LAST:event_openFile

    private void saveFile(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFile
       
       try {
            stf.writeToFile(bg);                      // write the Image to an image file
        } catch (Exception ex) {}
    
    }//GEN-LAST:event_saveFile

    private void adjustThickness(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_adjustThickness
        thick = jSlider1.getValue();     // user determines the thickness of the shape
    }//GEN-LAST:event_adjustThickness
  
    private void color1Change(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_color1Change
            c2 = JColorChooser.showDialog(this, "Color Selector", null);     // select color from j color chooser
            c1 = c2;
            jPanel3.setBackground(c2);
    }//GEN-LAST:event_color1Change

    private void color2Change(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_color2Change
            c3 = JColorChooser.showDialog(this, "Color Selector", null);     // select color from j color chooser
            jPanel4.setBackground(c3);
            if (!jRadioButton1.isSelected())
                c2 = c3;
    }//GEN-LAST:event_color2Change

    private void changeTransparency(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_changeTransparency
        val = jSlider2.getValue();      // get transparency value from slider
        val /= 100;                     // divide value by 100 to get decimal value        // TODO add your handling code here:
    }//GEN-LAST:event_changeTransparency

    private void frameResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_frameResized
            
           Graphics g = jPanel1.getGraphics();
           g.drawImage(bg, 0 , 0, null);     //redraw last image
            fg = null;
    }//GEN-LAST:event_frameResized

    private void printImage(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printImage
        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.pageDialog(new PageFormat());
        if (pj.printDialog()) {
            Book b = new Book();
            Printable printable = new MyPrintable(fg);
            b.append(printable, pf);
            pj.setPageable(b);
            try {
                pj.print();    // send Image to printer
            } catch (PrinterException ex) { 
                System.out.println("nope");
            }
        }

  
    }//GEN-LAST:event_printImage

    private void newFileButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileButton1ActionPerformed
        bg = null;  //set background to null
        repaint();
    }//GEN-LAST:event_newFileButton1ActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
         try {
            stf.writeToFile(bg);                      // write the Image to an image file
        } catch (Exception ex) {}
        
    }//GEN-LAST:event_saveButton1ActionPerformed

    private void openButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButton1ActionPerformed
            //Method for Opening new Image
        
           bg = stf.openFile();   // set Background equal to image in file
           Graphics g = jPanel1.getGraphics();
           g.drawImage(bg, 0 , 0, null);     //redraw last image
           fg = null;
    }//GEN-LAST:event_openButton1ActionPerformed

    private void printButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButton1ActionPerformed
         PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.pageDialog(new PageFormat());
        if (pj.printDialog()) {
            Book b = new Book();
            Printable printable = new MyPrintable(fg);
            b.append(printable, pf);
            pj.setPageable(b);
            try {
                pj.print();    // send Image to printer
            } catch (PrinterException ex) {
                Logger.getLogger(Drawing.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_printButton1ActionPerformed
   boolean freehand = false;
    private void freehandButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freehandButton1ActionPerformed
        freehand = true;
        eraser = false;
        ds = new FreeHand(); // if freehand selected set ds equal to freehand object
        freehandButton1.setEnabled(false); //deactivate button after clicked
        ovalButton1.setEnabled(true);   
        rectButton1.setEnabled(true);
        lineButton1.setEnabled(true);
        roundRectButton2.setEnabled(true);
        eraserButton1.setEnabled(true);
    }//GEN-LAST:event_freehandButton1ActionPerformed
     File f;
     BufferedImage bi = null;
    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
  
        if (jRadioButton2.isSelected()) {   // If user wants Texture Paint 
        JOptionPane.showMessageDialog(null, "Select an Image for Texture Paint!");   
        JFileChooser jfc = new JFileChooser("." + File.separator + "TextureImages");  //open folder inside project
        if (JFileChooser.APPROVE_OPTION == jfc.showOpenDialog(null)) 
        {
           
            f = jfc.getSelectedFile();      //set f equal to the file that user opened
 
        }
        
            try {  
         bi = ImageIO.read(f);      // read image from file
        } catch (Exception e){}
        }
        else if (!jRadioButton2.isSelected())
        {
            bi = null;
        }
            

        jRadioButton1.setSelected(false);            // dont allow gradient button and texture button to be selected at same time
            
 
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jPanel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel1ComponentResized
            Graphics g = jPanel1.getGraphics();
           g.drawImage(bg, 0 , 0, null);     //redraw last image
            fg = null;
           
   
    }//GEN-LAST:event_jPanel1ComponentResized
       
    private void textButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textButton1ActionPerformed
        String text = (String)JOptionPane.showInputDialog("Enter Text Then Drag Area to Display");   // get Text from user
        ds = new CustomText(text);
        freehandButton1.setEnabled(true); //reactivate all other buttons 
        ovalButton1.setEnabled(true);   
        rectButton1.setEnabled(true);
        lineButton1.setEnabled(true);
        roundRectButton2.setEnabled(true);
        eraser = false;
        freehand = false;
    }//GEN-LAST:event_textButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        jRadioButton2.setSelected(false);   // dont allow gradient button and texture button to be selected at same time
        c2 = c1;
    }//GEN-LAST:event_jRadioButton1ActionPerformed
      boolean eraser = false;
    private void eraserButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eraserButton1ActionPerformed
        eraser = true;
        freehand = false;
        ds = new Eraser(); // if eraser selected set ds equal to eraser object
        eraserButton1.setEnabled(false);   //deactivate button after clicked
        freehandButton1.setEnabled(true); 
        ovalButton1.setEnabled(true);   
        rectButton1.setEnabled(true);
        lineButton1.setEnabled(true);
        roundRectButton2.setEnabled(true);
    }//GEN-LAST:event_eraserButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       System.exit(0);   // END PROGRAM
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    
    
     

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Drawing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Drawing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Drawing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Drawing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Drawing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private EraserButton eraserButton1;
    private FreehandButton freehandButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JToolBar.Separator jSeparator11;
    private javax.swing.JToolBar.Separator jSeparator12;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JToolBar.Separator jSeparator9;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JToolBar jToolBar1;
    private LineButton lineButton1;
    private NewFileButton newFileButton1;
    private OpenButton openButton1;
    private OvalButton ovalButton1;
    private PrintButton printButton1;
    private RectButton rectButton1;
    private RoundRectButton roundRectButton2;
    private SaveButton saveButton1;
    private TextButton textButton1;
    // End of variables declaration//GEN-END:variables
}
